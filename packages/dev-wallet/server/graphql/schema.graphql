type Config {
  accessNode: String
  host: String
  icon: String
  name: String
  origin: String
  pid: String
  port: Int
}

type Me {
  userId: ID
  addr: String
  publicKey: String
  privateKey: String
  keyId: Int
  email: String
  name: String
  avatar: String
  cover: String
  color: String
  bio: String
}

type User {
  userId: ID
  addr: String
  publicKey: String
  keyId: Int
  name: String
  avatar: String
  cover: String
  color: String
  bio: String
}

type Session {
  userId: ID
  user: Me
  addr: String
  sessionId: String
}

type Query {
  config: Config
  me(sessionId: ID): Me
}

type Mutation {
  authenticate(email: String, pass: String): Session
  upsertUser(input: UpsertUserInput): User
}

input UpsertUserInput {
  email: String!
  pass: String!
  name: String
  avatar: String
  cover: String
  color: String
  bio: String
  newPass: String
  newEmail: String
}
