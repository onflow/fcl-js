/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.4
 * source: flow/entities/block_header.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/protobuf/timestamp";
import * as pb_1 from "google-protobuf";
export namespace flow.entities {
    export class BlockHeader extends pb_1.Message {
        constructor(data?: any[] | {
            id?: Uint8Array;
            parent_id?: Uint8Array;
            height?: number;
            timestamp?: dependency_1.google.protobuf.Timestamp;
            payload_hash?: Uint8Array;
            view?: number;
            parent_voter_ids?: Uint8Array[];
            parent_voter_sig_data?: Uint8Array;
            proposer_id?: Uint8Array;
            proposer_sig_data?: Uint8Array;
            chain_id?: string;
            parent_voter_indices?: Uint8Array;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [7], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("parent_id" in data && data.parent_id != undefined) {
                    this.parent_id = data.parent_id;
                }
                if ("height" in data && data.height != undefined) {
                    this.height = data.height;
                }
                if ("timestamp" in data && data.timestamp != undefined) {
                    this.timestamp = data.timestamp;
                }
                if ("payload_hash" in data && data.payload_hash != undefined) {
                    this.payload_hash = data.payload_hash;
                }
                if ("view" in data && data.view != undefined) {
                    this.view = data.view;
                }
                if ("parent_voter_ids" in data && data.parent_voter_ids != undefined) {
                    this.parent_voter_ids = data.parent_voter_ids;
                }
                if ("parent_voter_sig_data" in data && data.parent_voter_sig_data != undefined) {
                    this.parent_voter_sig_data = data.parent_voter_sig_data;
                }
                if ("proposer_id" in data && data.proposer_id != undefined) {
                    this.proposer_id = data.proposer_id;
                }
                if ("proposer_sig_data" in data && data.proposer_sig_data != undefined) {
                    this.proposer_sig_data = data.proposer_sig_data;
                }
                if ("chain_id" in data && data.chain_id != undefined) {
                    this.chain_id = data.chain_id;
                }
                if ("parent_voter_indices" in data && data.parent_voter_indices != undefined) {
                    this.parent_voter_indices = data.parent_voter_indices;
                }
            }
        }
        get id() {
            return pb_1.Message.getField(this, 1) as Uint8Array;
        }
        set id(value: Uint8Array) {
            pb_1.Message.setField(this, 1, value);
        }
        get parent_id() {
            return pb_1.Message.getField(this, 2) as Uint8Array;
        }
        set parent_id(value: Uint8Array) {
            pb_1.Message.setField(this, 2, value);
        }
        get height() {
            return pb_1.Message.getField(this, 3) as number;
        }
        set height(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get timestamp() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 4) as dependency_1.google.protobuf.Timestamp;
        }
        set timestamp(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get payload_hash() {
            return pb_1.Message.getField(this, 5) as Uint8Array;
        }
        set payload_hash(value: Uint8Array) {
            pb_1.Message.setField(this, 5, value);
        }
        get view() {
            return pb_1.Message.getField(this, 6) as number;
        }
        set view(value: number) {
            pb_1.Message.setField(this, 6, value);
        }
        get parent_voter_ids() {
            return pb_1.Message.getField(this, 7) as Uint8Array[];
        }
        set parent_voter_ids(value: Uint8Array[]) {
            pb_1.Message.setField(this, 7, value);
        }
        get parent_voter_sig_data() {
            return pb_1.Message.getField(this, 8) as Uint8Array;
        }
        set parent_voter_sig_data(value: Uint8Array) {
            pb_1.Message.setField(this, 8, value);
        }
        get proposer_id() {
            return pb_1.Message.getField(this, 9) as Uint8Array;
        }
        set proposer_id(value: Uint8Array) {
            pb_1.Message.setField(this, 9, value);
        }
        get proposer_sig_data() {
            return pb_1.Message.getField(this, 10) as Uint8Array;
        }
        set proposer_sig_data(value: Uint8Array) {
            pb_1.Message.setField(this, 10, value);
        }
        get chain_id() {
            return pb_1.Message.getField(this, 11) as string;
        }
        set chain_id(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        get parent_voter_indices() {
            return pb_1.Message.getField(this, 12) as Uint8Array;
        }
        set parent_voter_indices(value: Uint8Array) {
            pb_1.Message.setField(this, 12, value);
        }
        static fromObject(data: {
            id?: Uint8Array;
            parent_id?: Uint8Array;
            height?: number;
            timestamp?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            payload_hash?: Uint8Array;
            view?: number;
            parent_voter_ids?: Uint8Array[];
            parent_voter_sig_data?: Uint8Array;
            proposer_id?: Uint8Array;
            proposer_sig_data?: Uint8Array;
            chain_id?: string;
            parent_voter_indices?: Uint8Array;
        }) {
            const message = new BlockHeader({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.parent_id != null) {
                message.parent_id = data.parent_id;
            }
            if (data.height != null) {
                message.height = data.height;
            }
            if (data.timestamp != null) {
                message.timestamp = dependency_1.google.protobuf.Timestamp.fromObject(data.timestamp);
            }
            if (data.payload_hash != null) {
                message.payload_hash = data.payload_hash;
            }
            if (data.view != null) {
                message.view = data.view;
            }
            if (data.parent_voter_ids != null) {
                message.parent_voter_ids = data.parent_voter_ids;
            }
            if (data.parent_voter_sig_data != null) {
                message.parent_voter_sig_data = data.parent_voter_sig_data;
            }
            if (data.proposer_id != null) {
                message.proposer_id = data.proposer_id;
            }
            if (data.proposer_sig_data != null) {
                message.proposer_sig_data = data.proposer_sig_data;
            }
            if (data.chain_id != null) {
                message.chain_id = data.chain_id;
            }
            if (data.parent_voter_indices != null) {
                message.parent_voter_indices = data.parent_voter_indices;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: Uint8Array;
                parent_id?: Uint8Array;
                height?: number;
                timestamp?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                payload_hash?: Uint8Array;
                view?: number;
                parent_voter_ids?: Uint8Array[];
                parent_voter_sig_data?: Uint8Array;
                proposer_id?: Uint8Array;
                proposer_sig_data?: Uint8Array;
                chain_id?: string;
                parent_voter_indices?: Uint8Array;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.parent_id != null) {
                data.parent_id = this.parent_id;
            }
            if (this.height != null) {
                data.height = this.height;
            }
            if (this.timestamp != null) {
                data.timestamp = this.timestamp.toObject();
            }
            if (this.payload_hash != null) {
                data.payload_hash = this.payload_hash;
            }
            if (this.view != null) {
                data.view = this.view;
            }
            if (this.parent_voter_ids != null) {
                data.parent_voter_ids = this.parent_voter_ids;
            }
            if (this.parent_voter_sig_data != null) {
                data.parent_voter_sig_data = this.parent_voter_sig_data;
            }
            if (this.proposer_id != null) {
                data.proposer_id = this.proposer_id;
            }
            if (this.proposer_sig_data != null) {
                data.proposer_sig_data = this.proposer_sig_data;
            }
            if (this.chain_id != null) {
                data.chain_id = this.chain_id;
            }
            if (this.parent_voter_indices != null) {
                data.parent_voter_indices = this.parent_voter_indices;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id !== undefined)
                writer.writeBytes(1, this.id);
            if (this.parent_id !== undefined)
                writer.writeBytes(2, this.parent_id);
            if (this.height !== undefined)
                writer.writeUint64(3, this.height);
            if (this.timestamp !== undefined)
                writer.writeMessage(4, this.timestamp, () => this.timestamp.serialize(writer));
            if (this.payload_hash !== undefined)
                writer.writeBytes(5, this.payload_hash);
            if (this.view !== undefined)
                writer.writeUint64(6, this.view);
            if (this.parent_voter_ids !== undefined)
                writer.writeRepeatedBytes(7, this.parent_voter_ids);
            if (this.parent_voter_sig_data !== undefined)
                writer.writeBytes(8, this.parent_voter_sig_data);
            if (this.proposer_id !== undefined)
                writer.writeBytes(9, this.proposer_id);
            if (this.proposer_sig_data !== undefined)
                writer.writeBytes(10, this.proposer_sig_data);
            if (typeof this.chain_id === "string" && this.chain_id.length)
                writer.writeString(11, this.chain_id);
            if (this.parent_voter_indices !== undefined)
                writer.writeBytes(12, this.parent_voter_indices);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): BlockHeader {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new BlockHeader();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readBytes();
                        break;
                    case 2:
                        message.parent_id = reader.readBytes();
                        break;
                    case 3:
                        message.height = reader.readUint64();
                        break;
                    case 4:
                        reader.readMessage(message.timestamp, () => message.timestamp = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 5:
                        message.payload_hash = reader.readBytes();
                        break;
                    case 6:
                        message.view = reader.readUint64();
                        break;
                    case 7:
                        pb_1.Message.addToRepeatedField(message, 7, reader.readBytes());
                        break;
                    case 8:
                        message.parent_voter_sig_data = reader.readBytes();
                        break;
                    case 9:
                        message.proposer_id = reader.readBytes();
                        break;
                    case 10:
                        message.proposer_sig_data = reader.readBytes();
                        break;
                    case 11:
                        message.chain_id = reader.readString();
                        break;
                    case 12:
                        message.parent_voter_indices = reader.readBytes();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): BlockHeader {
            return BlockHeader.deserialize(bytes);
        }
    }
}
